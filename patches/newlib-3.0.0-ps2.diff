diff -Nurp newlib-3.0.0.20180226-orig/config.sub newlib-3.0.0.20180226/config.sub
--- newlib-3.0.0.20180226-orig/config.sub	2018-02-26 14:39:48.000000000 -0500
+++ newlib-3.0.0.20180226/config.sub	2018-05-01 19:08:14.463637881 -0400
@@ -328,6 +328,9 @@ case $basic_machine in
 	c6x)
 		basic_machine=tic6x-unknown
 		;;
+	ee)
+		basic_machine=mipsr5900-unknown
+		;;
 	leon|leon[3-9])
 		basic_machine=sparc-$basic_machine
 		;;
diff -Nurp newlib-3.0.0.20180226-orig/newlib/libc/ctype/ctype_.c newlib-3.0.0.20180226/newlib/libc/ctype/ctype_.c
--- newlib-3.0.0.20180226-orig/newlib/libc/ctype/ctype_.c	2018-02-26 14:39:48.000000000 -0500
+++ newlib-3.0.0.20180226/newlib/libc/ctype/ctype_.c	2018-05-01 20:10:43.224312997 -0400
@@ -86,7 +86,7 @@ static char sccsid[] = "@(#)ctype_.c	5.6
 #if defined(ALLOW_NEGATIVE_CTYPE_INDEX)
 /* No static const on Cygwin since it's referenced and potentially overwritten
    for compatibility with older applications. */
-#ifndef __CYGWIN__
+#if __GNUC__ > 4
 const
 #endif
 char _ctype_b[128 + 256] = {
diff -Nurp newlib-3.0.0.20180226-orig/newlib/libc/ctype/ctype_.h newlib-3.0.0.20180226/newlib/libc/ctype/ctype_.h
--- newlib-3.0.0.20180226-orig/newlib/libc/ctype/ctype_.h	2018-02-26 14:39:48.000000000 -0500
+++ newlib-3.0.0.20180226/newlib/libc/ctype/ctype_.h	2018-05-01 20:11:07.185615569 -0400
@@ -6,7 +6,7 @@
 
 #ifdef ALLOW_NEGATIVE_CTYPE_INDEX
 
-#ifndef __CYGWIN__
+#if __GNUC__ > 4
   extern const char _ctype_b[];
 #else
   extern char _ctype_b[];
diff -Nurp newlib-3.0.0.20180226-orig/newlib/libc/include/stdlib.h newlib-3.0.0.20180226/newlib/libc/include/stdlib.h
--- newlib-3.0.0.20180226-orig/newlib/libc/include/stdlib.h	2018-02-26 14:39:48.000000000 -0500
+++ newlib-3.0.0.20180226/newlib/libc/include/stdlib.h	2018-05-01 19:22:31.050647794 -0400
@@ -127,7 +127,11 @@ int	mkstemp (char *);
 int	mkstemps (char *, int);
 #endif
 #if __BSD_VISIBLE || (__XSI_VISIBLE >= 4 && __POSIX_VISIBLE < 200112)
-char *	mktemp (char *) _ATTRIBUTE ((__deprecated__("the use of `mktemp' is dangerous; use `mkstemp' instead")));
+#if __GNUC__ < 4
+char *	mktemp(char *) _ATTRIBUTE ((__deprecated__));
+#else 
+char *	mktemp(char *) _ATTRIBUTE ((__deprecated__("the use of `mktemp' is dangerous; use `mkstemp' instead")));
+#endif
 #endif
 #endif /* !_REENT_ONLY */
 char *	_mkdtemp_r (struct _reent *, char *);
@@ -135,7 +139,11 @@ int	_mkostemp_r (struct _reent *, char *
 int	_mkostemps_r (struct _reent *, char *, int, int);
 int	_mkstemp_r (struct _reent *, char *);
 int	_mkstemps_r (struct _reent *, char *, int);
+#if __GNUC__ < 4
+char *	_mktemp_r (struct _reent *, char *) _ATTRIBUTE ((__deprecated__));
+#else
 char *	_mktemp_r (struct _reent *, char *) _ATTRIBUTE ((__deprecated__("the use of `mktemp' is dangerous; use `mkstemp' instead")));
+#endif
 void	qsort (void *__base, size_t __nmemb, size_t __size, __compar_fn_t _compar);
 int	rand (void);
 void *	realloc (void *__r, size_t __size) _NOTHROW;
diff -Nurp newlib-3.0.0.20180226-orig/newlib/libc/include/sys/config.h newlib-3.0.0.20180226/newlib/libc/include/sys/config.h
--- newlib-3.0.0.20180226-orig/newlib/libc/include/sys/config.h	2018-02-26 14:39:48.000000000 -0500
+++ newlib-3.0.0.20180226/newlib/libc/include/sys/config.h	2018-05-01 20:02:59.390264601 -0400
@@ -135,6 +135,7 @@
 
 #if defined(__mips__) && !defined(__rtems__)
 #define __ATTRIBUTE_IMPURE_PTR__ __attribute__((__section__(".sdata")))
+#define _POINTER_INT int
 #endif
 
 #ifdef __xstormy16__
diff -Nurp newlib-3.0.0.20180226-orig/newlib/libc/include/sys/reent.h newlib-3.0.0.20180226/newlib/libc/include/sys/reent.h
--- newlib-3.0.0.20180226-orig/newlib/libc/include/sys/reent.h	2018-02-26 14:39:48.000000000 -0500
+++ newlib-3.0.0.20180226/newlib/libc/include/sys/reent.h	2018-05-01 19:14:31.045551542 -0400
@@ -773,7 +773,7 @@ extern __FILE __sf[3];
 #endif
 
 extern struct _reent *_impure_ptr __ATTRIBUTE_IMPURE_PTR__;
-extern struct _reent *const _global_impure_ptr __ATTRIBUTE_IMPURE_PTR__;
+extern struct _reent *_global_impure_ptr __ATTRIBUTE_IMPURE_PTR__;
 
 void _reclaim_reent (struct _reent *);
 
diff -Nurp newlib-3.0.0.20180226-orig/newlib/libc/reent/impure.c newlib-3.0.0.20180226/newlib/libc/reent/impure.c
--- newlib-3.0.0.20180226-orig/newlib/libc/reent/impure.c	2018-02-26 14:39:48.000000000 -0500
+++ newlib-3.0.0.20180226/newlib/libc/reent/impure.c	2018-05-01 19:15:39.534656317 -0400
@@ -25,4 +25,4 @@ static struct _reent __ATTRIBUTE_IMPURE_
 extern struct _reent reent_data __attribute__ ((alias("impure_data")));
 #endif
 struct _reent *__ATTRIBUTE_IMPURE_PTR__ _impure_ptr = &impure_data;
-struct _reent *const __ATTRIBUTE_IMPURE_PTR__ _global_impure_ptr = &impure_data;
+struct _reent *__ATTRIBUTE_IMPURE_PTR__ _global_impure_ptr = &impure_data;
diff -Nurp newlib-3.0.0.20180226-orig/newlib/libc/search/qsort.c newlib-3.0.0.20180226/newlib/libc/search/qsort.c
--- newlib-3.0.0.20180226-orig/newlib/libc/search/qsort.c	2018-02-26 14:39:48.000000000 -0500
+++ newlib-3.0.0.20180226/newlib/libc/search/qsort.c	2018-05-01 19:17:24.225022160 -0400
@@ -129,16 +129,23 @@ swapfunc (char *a,
 #define	CMP(t, x, y) (cmp((x), (y)))
 #endif
 
+#if !defined(I_AM_QSORT_R) && !defined(I_AM_GNU_QSORT_R)
 static inline char *
 med3 (char *a,
 	char *b,
 	char *c,
 	cmp_t *cmp,
 	void *thunk
-#if !defined(I_AM_QSORT_R) && !defined(I_AM_GNU_QSORT_R)
-__unused
+__unused)
+#else
+static inline char *
+med3 (char *a,
+	char *b,
+	char *c,
+	cmp_t *cmp,
+	void *thunk
+__unused)
 #endif
-)
 {
 	return CMP(thunk, a, b) < 0 ?
 	       (CMP(thunk, b, c) < 0 ? b : (CMP(thunk, a, c) < 0 ? c : a ))
diff -Nurp newlib-3.0.0.20180226-orig/newlib/libc/stdlib/mallocr.c newlib-3.0.0.20180226/newlib/libc/stdlib/mallocr.c
--- newlib-3.0.0.20180226-orig/newlib/libc/stdlib/mallocr.c	2018-02-26 14:39:48.000000000 -0500
+++ newlib-3.0.0.20180226/newlib/libc/stdlib/mallocr.c	2018-05-01 20:10:06.039544291 -0400
@@ -3064,7 +3064,7 @@ Void_t* mEMALIGn(RARG alignment, bytes)
 
   p = mem2chunk(m);
 
-  if ((((unsigned long)(m)) % alignment) == 0) /* aligned */
+  if ((((POINTER_UINT)(m)) % alignment) == 0) /* aligned */
   {
 #if HAVE_MMAP
     if(chunk_is_mmapped(p))
@@ -3085,7 +3085,7 @@ Void_t* mEMALIGn(RARG alignment, bytes)
       this is always possible.
     */
 
-    brk = (char*)mem2chunk(((unsigned long)(m + alignment - 1)) & -alignment);
+    brk = (char*)mem2chunk(((POINTER_UINT)(m + alignment - 1)) & -alignment);
     if ((long)(brk - (char*)(p)) < (long)MINSIZE) brk = brk + alignment;
 
     newp = (mchunkptr)brk;
